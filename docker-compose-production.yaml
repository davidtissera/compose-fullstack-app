version: '3'
services:
  frontend:
    container_name: docker-course-frontend-production
    image: docker-course-frontend-production
    ports:
      - "81:80"
    build:
      context: '../containerized-frontend'
      dockerfile: Dockerfile.prod
      args:
        - FRONTEND_PORT=${FRONTEND_PORT}
    networks:
      - nestjs-network-production
  backend:
    container_name: docker-course-backend-production
    image: docker-course-backend-production
    ports:
      - "82:80"
    depends_on:
      - mongodb
    networks:
      - nestjs-network-production
    build:
      context: '../containerized-backend'
      dockerfile: Dockerfile.prod
      args:
        - BACKEND_PORT=${BACKEND_PORT}
  mongodb:
    image: mongo:latest
    container_name: mongodb-production
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE_NAME}"
    ports:
      - 27019:27017
    networks:
      - nestjs-network-production
    restart: always
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-production
    restart: always
    ports:
      - 8080:8081
    networks:
      - nestjs-network-production
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
networks:
  nestjs-network-production:
    driver: bridge

version: '3.8'
services:
  frontend:
    build:
      context: '../containerized-frontend'
      dockerfile: Dockerfile.dev
      args: 
        - FRONTEND_PORT=${FRONTEND_PORT}
    volumes:
      - ../containerized-frontend:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
    container_name: frontend-development
    command: npm run start:dev
    image: frontend-development
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    env_file:
      - ./.env
    networks:
      - nestjs-network-development
  backend:
    container_name: backend-development
    command: npm run start:dev
    image: backend-development
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - mongodb
    networks:
      - nestjs-network-development
    env_file:
      - ./.env
    build:
      context: '../containerized-backend'
      dockerfile: Dockerfile.dev
      args:
        - BACKEND_PORT=${BACKEND_PORT}
    volumes:
      - ../containerized-backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
  mongodb:
    image: mongo:latest
    container_name: mongodb-development
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE_NAME}"
    ports:
      - 27017:27017
    networks:
      - nestjs-network-development
    restart: always
    volumes:
      - mongo-data:/data/db
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-development
    restart: always
    ports:
      - 8080:8081
    networks:
      - nestjs-network-development
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
networks:
  nestjs-network-development:
    driver: bridge
volumes:
  mongo-data:
    driver: local
  frontend_node_modules:
  backend_node_modules:
